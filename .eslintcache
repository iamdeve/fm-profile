[{"/home/yamin/Downloads/work/fm-profile/src/reportWebVitals.js":"1","/home/yamin/Downloads/work/fm-profile/src/App.js":"2","/home/yamin/Downloads/work/fm-profile/src/components/TopMenu/TopMenu.js":"3","/home/yamin/Downloads/work/fm-profile/src/components/Profile/Profile.js":"4","/home/yamin/Downloads/work/fm-profile/src/components/Profile/Basic.js":"5","/home/yamin/Downloads/work/fm-profile/src/components/Profile/Bank.js":"6","/home/yamin/Downloads/work/fm-profile/src/components/Profile/DematDetails.js":"7","/home/yamin/Downloads/work/fm-profile/src/components/Profile/KYCDocument.js":"8","/home/yamin/Downloads/work/fm-profile/src/index.js":"9"},{"size":362,"mtime":1609493421195,"results":"10","hashOfConfig":"11"},{"size":389,"mtime":1609499564753,"results":"12","hashOfConfig":"11"},{"size":2925,"mtime":1609590995954,"results":"13","hashOfConfig":"11"},{"size":4012,"mtime":1609595590138,"results":"14","hashOfConfig":"11"},{"size":1159,"mtime":1609589892895,"results":"15","hashOfConfig":"11"},{"size":8480,"mtime":1609603686550,"results":"16","hashOfConfig":"11"},{"size":8381,"mtime":1609603258225,"results":"17","hashOfConfig":"11"},{"size":8046,"mtime":1609603561138,"results":"18","hashOfConfig":"11"},{"size":500,"mtime":1609493421195,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wcel93",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"/home/yamin/Downloads/work/fm-profile/src/reportWebVitals.js",[],"/home/yamin/Downloads/work/fm-profile/src/App.js",[],["41","42"],"/home/yamin/Downloads/work/fm-profile/src/components/TopMenu/TopMenu.js",["43"],"/home/yamin/Downloads/work/fm-profile/src/components/Profile/Profile.js",[],"/home/yamin/Downloads/work/fm-profile/src/components/Profile/Basic.js",[],["44","45"],"/home/yamin/Downloads/work/fm-profile/src/components/Profile/Bank.js",["46"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport { FormControl, Card, FormControlLabel, IconButton, Input, InputAdornment, InputLabel, Link, TextField } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { SwipeableDrawer } from '@material-ui/core';\nimport InfoIcon from '@material-ui/icons/Info';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst GreenCheckbox = withStyles({\n\troot: {\n\t\tcolor: green[400],\n\t\t'&$checked': {\n\t\t\tcolor: green[600],\n\t\t},\n\t},\n\tchecked: {},\n})((props) => <Checkbox color='default' {...props} />);\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tAddBtn: {\n\t\ttextAlign: 'center',\n\t\tcolor: '#1d28ea',\n\t\tcursor: 'pointer',\n\t\tfontSize: '22px',\n\t\tfontWeight: 'bold',\n\t},\n\tBtnWrapper: {\n\t\tmargin: '1rem',\n\t\ttextAlign: 'center',\n\t},\n\tlist: {\n\t\twidth: 250,\n\t},\n\tfullList: {\n\t\twidth: '100%',\n\t},\n\tInputField: {\n\t\tmarginBottom: '1rem',\n\t\t'& div': {\n\t\t\twidth: '100%',\n\t\t},\n\t},\n\tControlField: {\n\t\tmarginBottom: '1rem',\n\t\t'& div:first-child': {\n\t\t\twidth: '100%',\n\t\t},\n\t},\n\tOTPField: {\n\t\t'& label': {\n\t\t\tfontSize: '40px',\n\t\t\tmargin: '-1rem 0',\n\t\t},\n\t\tmarginBottom: '2rem',\n\t},\n\tBankForm: {\n\t\tpadding: '1rem',\n\t\tmargin: '1rem',\n\t\tboxShadow: '0 0 10px #ccc',\n\t\tborderRadius: '10px',\n\t},\n\tBankDetails: {\n\t\tmargin: '1rem 0',\n\t},\n\tBankDetailsNext: {\n\t\tmargin: '1rem ',\n\t},\n\tInputDesc: {\n\t\tpadding: '.5rem',\n\t\tmargin: '1rem',\n\t\tborder: '1px solid blue',\n\t\tborderRadius: '5px',\n\t\t'& p': {\n\t\t\tmargin: '0',\n\t\t\tcolor: '#999',\n\t\t},\n\t},\n\tConfirmCheck: {\n\t\tmargin: '1rem 3rem',\n\t},\n\tlabel: {\n\t\t// margin: '1rem 0',\n\t\tfontSize: '1rem',\n\t\tlineHeight: '1rem',\n\t\t// textAlign: 'justify',\n\t},\n\tCustomBtn: {\n\t\twidth: '100%',\n\t\tpadding: '1rem ',\n\t\tfontSize: '22px',\n\t},\n\tDrawerContent: {},\n\tDrawerHeader: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'space-between',\n\t\talignItems: 'center',\n\t\tpadding: '1rem',\n\t\tborderBottom: '1px solid #000',\n\t\t'& h2': {\n\t\t\tmargin: '.2rem 0',\n\t\t},\n\t},\n\tContent: {\n\t\tmargin: '1rem 2rem',\n\t\tboxShadow: '0 0 5px #ccc',\n\t\tborderRadius: '5px',\n\t},\n\tOTPDetails: {\n\t\tcolor: '#999',\n\t\twordBreak: ' break-all',\n\t},\n\tBankSuccess: {\n\t\tpadding: '1rem 2rem',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\t'& svg': {\n\t\t\tcolor: 'green',\n\t\t\tfontSize: '72px',\n\t\t},\n\t},\n}));\n\nfunction Bank({ user }) {\n\tconst classes = useStyles();\n\tconst [showDrawer, setShowDrawer] = React.useState(false);\n\tconst [verifyBank, setVerifyBank] = React.useState(false);\n\tconst [account, setAccount] = React.useState(false);\n\tconst toggleDrawer = (open) => (event) => {\n\t\tif (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n\t\t\treturn;\n\t\t}\n\t\tsetShowDrawer(open);\n\t};\n\tconst [bankForm, setBankForm] = React.useState({\n\t\tifscCode: '',\n\t\taccountNumber: '',\n\t\tconfirmAccount: false,\n\t\totp: '',\n\t});\n\tconst handleBankFormChange = (e) => {\n\t\tconst { value, name, checked, type } = e.target;\n\t\tif (type === 'checkbox') {\n\t\t\tconsole.log(value, name, checked, type);\n\t\t\tsetBankForm((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\t[name]: checked,\n\t\t\t}));\n\t\t} else {\n\t\t\tsetBankForm((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t}));\n\t\t}\n\t};\n\n\tconst verifyBankAccount = () => {\n\t\tsetVerifyBank(true);\n\t};\n\n\tconst addBankAccount = () => {\n\t\tsetAccount(true);\n\t};\n\n\tconst handleComplete = () => {\n\t\tsetBankForm({\n\t\t\tifscCode: '',\n\t\t\taccountNumber: '',\n\t\t\tconfirmAccount: false,\n\t\t\totp: '',\n\t\t});\n\t\ttoggleDrawer(false);\n\t\tsetAccount(false);\n\t\tsetShowDrawer(false);\n\t\tsetVerifyBank(false);\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div className={classes.BtnWrapper}>\n\t\t\t\t<Button onClick={toggleDrawer(true)} className={classes.AddBtn}>\n\t\t\t\t\t+ Add Bank\n\t\t\t\t</Button>\n\t\t\t</div>\n\n\t\t\t<SwipeableDrawer anchor='bottom' open={showDrawer} onClose={toggleDrawer(false)}>\n\t\t\t\t<div className={classes.fullList} role='presentation'>\n\t\t\t\t\t<div className={classes.DrawerContent}>\n\t\t\t\t\t\t<div className={classes.DrawerHeader}>\n\t\t\t\t\t\t\t<h2>Add Bank</h2>\n\t\t\t\t\t\t\t<span onClick={toggleDrawer(false)}>\n\t\t\t\t\t\t\t\t<ClearIcon />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className={classes.BankContent}>\n\t\t\t\t\t\t\t{!verifyBank ? (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<div className={classes.InputDesc}>\n\t\t\t\t\t\t\t\t\t\t<p>You can only add bank accounts that belongs to you. Either where you are the single user or in case of a joint account you should be the first holder</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={classes.BankForm}>\n\t\t\t\t\t\t\t\t\t\t<div className={classes.ControlField}>\n\t\t\t\t\t\t\t\t\t\t\t<FormControl>\n\t\t\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor='ifscCode'>Enter Your Bank's IFSC code</InputLabel>\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\t\tid='ifscCode'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='ifscCode'\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleBankFormChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={bankForm.ifscCode}\n\t\t\t\t\t\t\t\t\t\t\t\t\tendAdornment={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputAdornment position='end'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton aria-label='ifsc code'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InfoIcon style={{ color: '#1d28ea' }} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className={classes.BankDetails}>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Bank Name : </span> <span>ShownbaseonIFSC</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Branch : </span> <span>ShownbaseonIFSC</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className={classes.InputField}>\n\t\t\t\t\t\t\t\t\t\t\t<TextField type='text' onChange={handleBankFormChange} name='accountNumber' defaultValue={bankForm.accountNumber} label='Account Number' />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div className={classes.ConfirmBtnWrapper}>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={verifyBankAccount} variant='contained' color='primary' className={classes.CustomBtn}>\n\t\t\t\t\t\t\t\t\t\t\tVerify Bank\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) : account ? (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Card style={{ padding: '4rem  1rem' }}>\n\t\t\t\t\t\t\t\t\t\t<div className={classes.BankSuccess}>\n\t\t\t\t\t\t\t\t\t\t\t<DoneIcon />\n\t\t\t\t\t\t\t\t\t\t\t<span style={{ color: '#999999' }}>Bank account has been added sucessfully.</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t\t<div className={classes.DoneBtn}>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={handleComplete} variant='contained' color='primary' className={classes.CustomBtn}>\n\t\t\t\t\t\t\t\t\t\t\tDone\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<div className={classes.BankDetailsNext}>\n\t\t\t\t\t\t\t\t\t\t<Card style={{ padding: '1rem' }}>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Name : </span>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>{user.firstName + ' ' + user.lastName}</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Bank : </span>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Bank of India</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>A/C : </span>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>************1234</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Branch : </span>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Fort, Horniman Circle</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Card>\n\n\t\t\t\t\t\t\t\t\t\t<div className={classes.ConfirmCheck}>\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\t\tclasses={{ label: classes.label }}\n\t\t\t\t\t\t\t\t\t\t\t\tname='confirmAccount'\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleBankFormChange}\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={bankForm.confirmAccount}\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<GreenCheckbox icon={<CheckBoxOutlineBlankIcon />} checkedIcon={<i className='fa fa-check-square-o'></i>} name='confirmAccount' />}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='I confirm that the above bank account belongs to me. '\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<div className={classes.OTPDetails}>\n\t\t\t\t\t\t\t\t\t\t\t<p>Enter OTP sent to you via SMS on 9987876564 & via email on emailbeforedomainlongname@longdomainname.com</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className={[classes.InputField, classes.OTPField].join(' ')}>\n\t\t\t\t\t\t\t\t\t\t\t<TextField type='text' name='otp' defaultValue={bankForm.otp} label='Enter OTP' />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div className={classes.ConfirmBtnWrapper}>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={addBankAccount} variant='contained' color='primary' className={classes.CustomBtn}>\n\t\t\t\t\t\t\t\t\t\t\tAdd Bank\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</SwipeableDrawer>\n\t\t</div>\n\t);\n}\n\nexport default Bank;\n","/home/yamin/Downloads/work/fm-profile/src/components/Profile/DematDetails.js",[],"/home/yamin/Downloads/work/fm-profile/src/components/Profile/KYCDocument.js",[],"/home/yamin/Downloads/work/fm-profile/src/index.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":2,"column":10,"nodeType":"53","messageId":"54","endLine":2,"endColumn":14},{"ruleId":"47","replacedBy":"55"},{"ruleId":"49","replacedBy":"56"},{"ruleId":"51","severity":1,"message":"57","line":6,"column":94,"nodeType":"53","messageId":"54","endLine":6,"endColumn":98},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'fade' is defined but never used.","Identifier","unusedVar",["58"],["59"],"'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]